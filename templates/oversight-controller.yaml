{{- if eq true .Values.cloudOne.oversight.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "oversight.labels" . | nindent 4 }}
  name: trendmicro-oversight-controller
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ default 1 .Values.replicas.oversight }}
  selector:
    matchLabels:
      {{- include "oversight.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/auth: {{ include "container.security.auth.secret" . | sha256sum }}
        checksum/cert: {{ include (print $.Template.BasePath "/kube-rbac-proxy-cert.yaml") . | sha256sum }}
{{- with (default .Values.podAnnotations.defaults .Values.podAnnotations.oversight) }}
{{- toYaml . | nindent 8 }}
{{- end }}
      labels:
        {{- include "oversight.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "oversight.serviceAccountName" . }}
{{- $securityContextEnabled := .Values.securityContext.enabled }}
{{- $securityContext := default .Values.securityContext.default .Values.securityContext.oversight }}
{{- $podSecurityContext := default .Values.securityContext.default.pod $securityContext.pod }}
{{- $containerSecurityContext := default .Values.securityContext.default.container $securityContext.container.oversight }}
{{- if $securityContextEnabled }}
      securityContext:
{{ toYaml $podSecurityContext | indent 8 }}
{{- end }}
      {{- $imageDefaults := .Values.images.defaults }}
      {{- with .Values.images.oversight }}
      {{- $secret := (default (default "" $imageDefaults.imagePullSecret) .imagePullSecret) }}
      {{- if not (eq "" $secret) }}
      imagePullSecrets:
        - name: {{ $secret | quote }}
      {{- end }}
      containers:
      - name: controller-manager
{{- if $securityContextEnabled }}
        securityContext:
{{ toYaml $containerSecurityContext | indent 12 }}
{{- end }}
        {{- $project := (default (default "trendmicrocloudone" $imageDefaults.project) .project) }}
        {{- $repository := printf "%s/%s" $project (required ".repository is required!" .repository) }}
        {{- $tag := (default $imageDefaults.tag .tag) }}
        image: {{ include "image.source" (dict "repository" $repository "registry" .registry "tag" $tag "imageDefaults" $imageDefaults "digest" .digest) }}
        imagePullPolicy: {{ default (default "Always" $imageDefaults.pullPolicy) .pullPolicy }}
        {{- end }}
        volumeMounts:
          - name: workdir
            mountPath: /var/oversight
          - name: api-key
            mountPath: /secrets
          {{- if .Values.telemetry.publicKey }}
          - name: telemetry-secret
            mountPath: /telemetry
          {{- end }}{{/* .Values.telemetry.publicKey */}}
        args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --mitigation-handler-buffer-size={{ default 50 .Values.cloudOne.oversight.mitigationHandlerBufferSize }}
        - --page-size={{ default 100 .Values.cloudOne.oversight.pageSize }}
        - --sync-period={{ default "3600s" .Values.cloudOne.oversight.syncPeriod }}
        - --enable-runtime-mitigation={{ default false .Values.cloudOne.runtimeSecurity.enabled }}
        - --exclude-kubernetes-service-host-from-proxy={{ default true .Values.proxy.excludeKubernetesServiceHost }}
        - --excluded-namespaces
        {{- $excludeNS := (default (list) .Values.cloudOne.exclusion.namespaces) }}
        - {{ $excludeNS | join "," | quote }}
        - --cloud-one-endpoint={{ include "container.security.endpoint" . }}
        - --network-policy-label={{ default "trendmicro" .Release.Name }}
        - --application-version=$(APPLICATION_VERSION)
        {{- if (eq .Values.cloudOne.oversight.enableNetworkPolicyCreation false) }}
        - --enable-network-policy-creation=false
        {{- end }}
        {{- if .Values.telemetry.enabled }}
        - --telemetry-endpoint={{ .Values.telemetry.endpoint }}
        - --telemetry-interval={{ .Values.telemetry.interval }}
        - --telemetry-api-key={{ default "" .Values.telemetry.apiKey }}
        {{- if .Values.telemetry.publicKey }}
        - --telemetry-key-file=/telemetry/key.pem
        {{- end }}{{/* .Values.telemetry.publicKey */}}
        {{- end }}{{/* .Values.telemetry.enabled */}}
        command:
        - /manager
        env:
        {{- include "container.security.proxy.env" . | nindent 8 }}
        - name: APPLICATION_VERSION
          value: {{ .Chart.Version | quote }}
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
{{ toYaml (default .Values.resources.defaults .Values.resources.oversight) | indent 12 }}
      - {{ include "rbacProxy" (dict "securityContext" .Values.securityContext "images" .Values.images "resources" .Values.resources "customSecurityContext" .Values.securityContext.oversight ) | nindent 8 | trim }}
      terminationGracePeriodSeconds: 10
      nodeSelector:
{{ toYaml (default .Values.nodeSelector.defaults .Values.nodeSelector.oversight) | indent 8 }}
      tolerations:
{{ toYaml (default .Values.tolerations.defaults .Values.tolerations.oversight) | indent 8 }}
      affinity:
{{ toYaml (default .Values.affinity.defaults .Values.affinity.oversight) | indent 8 }}
{{- $classname := (default (default "" .Values.priorityClassName.default ) .Values.priorityClassName.oversight) }}
{{- if not (eq "" $classname) }}
      priorityClassName: "{{ $classname }}"
{{- end }}
      restartPolicy: Always
      volumes:
        - name: workdir
          emptyDir:
            sizeLimit: 50Mi
        - name: api-key
          secret:
            secretName: {{ template "container.security.fullname" . }}-auth
        - name: rbac-proxy-certs
          secret:
            secretName: {{ template "kubeRbacProxy.fullname" . }}-tls-certificate
        {{- if .Values.telemetry.publicKey }}
        - name: telemetry-secret
          secret:
            secretName: {{ template "container.security.fullname" . }}-telemetry
            items:
            - key: publicKey
              path: key.pem
        {{- end }}{{/* .Values.telemetry.publicKey */}}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    {{- include "oversight.labels" . | nindent 4 }}
  name: trendmicro-oversight-controller-metrics-service
  namespace: {{ .Release.Namespace }}
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    {{- include "oversight.selectorLabels" . | nindent 4 }}

{{ if .Values.networkPolicy.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: oversight-controller-networkpolicy
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "oversight.labels" . | nindent 4 }}
spec:
  podSelector:
    matchLabels:
      {{- include "oversight.selectorLabels" . | nindent 6 }}
  policyTypes:
    - Ingress
  ingress:
    - from: # any -- this is for metrics
      ports:
        - protocol: TCP
          port: 8443
    - from: # any -- this should just be kubelet for health probes
      ports:
        - protocol: TCP
          port: 8081
{{- end }}

{{ if .Values.serviceAccount.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "oversight.serviceAccountName" . }}
  labels:
    {{- include "oversight.labels" . | nindent 4 }}
  {{- with .Values.serviceAccount.oversight.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
{{- end }}
