rules_file:
  - /etc/falco/default_rules.yaml
  - /etc/falco/rules.d

#################
# Falco plugins #
#################

load_plugins: []

# Customize subsettings for each enabled plugin. These settings will only be
# applied when the corresponding plugin is enabled using the `load_plugins`
# option.
plugins:
  - name: k8saudit
    library_path: libk8saudit.so
    init_config:
    #   maxEventSize: 262144
    #   webhookMaxBatchSize: 12582912
    #   sslCertificate: /etc/falco/falco.pem
    open_params: "http://:9765/k8s-audit"
  - name: cloudtrail
    library_path: libcloudtrail.so
    # see docs for init_config and open_params:
    # https://github.com/falcosecurity/plugins/blob/master/plugins/cloudtrail/README.md
  - name: json
    library_path: libjson.so

######################
# Falco config files #
######################

watch_config_files: true

##########################
# Falco outputs settings #
##########################

time_format_iso_8601: false

priority: debug

json_include_output_property: true

json_include_tags_property: true

buffered_outputs: false

outputs:
  rate: 0
  max_burst: 1000

rule_matching: first

outputs_queue:
  capacity: 0

##########################
# Falco outputs channels #
##########################

stdout_output:
  enabled: true

syslog_output:
  enabled: false

file_output:
  enabled: false
  keep_alive: false
  filename: ./events.txt

program_output:
  enabled: false
  keep_alive: false
  program: "jq '{text: .output}' | curl -d @- -X POST https://hooks.slack.com/services/XXX"

grpc_output:
  enabled: false

##########################
# Falco exposed services #
##########################

grpc:
  enabled: false
  bind_address: "unix:///run/falco/falco.sock"
  # When the `threadiness` value is set to 0, Falco will automatically determine
  # the appropriate number of threads based on the number of online cores in the system.
  threadiness: 0

webserver:
  enabled: true
  # When the `threadiness` value is set to 0, Falco will automatically determine
  # the appropriate number of threads based on the number of online cores in the system.
  threadiness: 0
  listen_port: 8765
  k8s_healthz_endpoint: /healthz
  ssl_enabled: false
  ssl_certificate: /etc/falco/falco.pem

##############################################################################
# Falco logging / alerting / metrics related to software functioning (basic) #
##############################################################################

log_stderr: true
log_syslog: true

log_level: info

libs_logger:
  enabled: false
  severity: debug

#################################################################################
# Falco logging / alerting / metrics related to software functioning (advanced) #
#################################################################################

output_timeout: 2000

syscall_event_timeouts:
  max_consecutives: 1000

syscall_event_drops:
  threshold: .1
  actions:
    - log
    - alert
  rate: .03333
  max_burst: 1
  simulate_drops: false

metrics:
  enabled: false
  interval: 1h
  # Typically, in production, you only use `output_rule` or `output_file`, but not both.
  # However, if you have a very unique use case, you can use both together.
  output_rule: true
  # output_file: /tmp/falco_stats.jsonl
  resource_utilization_enabled: true
  kernel_event_counters_enabled: true
  libbpf_stats_enabled: true
  convert_memory_to_mb: true
  include_empty_values: false

#######################################
# Falco performance tuning (advanced) #
#######################################

syscall_buf_size_preset: 4

syscall_drop_failed_exit: false

base_syscalls:
  custom_set: []
  repair: false

modern_bpf:
  cpus_for_each_syscall_buffer: 2

#################################################
# Falco cloud orchestration systems integration #
#################################################

metadata_download:
  max_mb: 100
  chunk_wait_us: 1000
  watch_freq_sec: 1
